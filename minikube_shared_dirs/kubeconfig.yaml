apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuber-learn--home-lister-1-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      # The deployment will handle pods with this label.
      app: kuber-learn--home-lister-1
  template: # pod template
    metadata:
      labels:
        # Make a label to allow deployment and service to find these pods.
        app: kuber-learn--home-lister-1
    spec:
      containers:
        - name: kuber-learn--home-lister-1
          image: kuber_learn__home_lister:v0
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          # Mount a volume with specified name
          # into some arbitrary dir inside of pod container.
          volumeMounts:
            - name: hosthome-pv
              mountPath: /opt/hosthome
      volumes:
        # Volume declaration specifies its name and a claim.
        # Claim is a global stuff and defined below.
        - name: hosthome-pv
          persistentVolumeClaim:
            claimName: hosthome-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: kuber-learn--home-lister-1-service
spec:
  type: NodePort
  selector:
    # Service will select pods with this label
    app: kuber-learn--home-lister-1
  ports:
    - protocol: TCP
      port: 5000
---
# Volume clain is uses to search for volumes.
# Volumes and claims are global stuff and can be used in several deployments.
# Claim searches for a volume by matching access modes and desired storage size.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hosthome-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
---
# This is volume definition.
# Volumes and claims are global stuff and can be used in several deployments.
apiVersion: v1
kind: PersistentVolume
metadata:
  name: hosthome-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadOnlyMany
  # Host here is the minikube VM and path `/hosthome` on this host
  # is bound to `/home` dir of the real host machine.
  hostPath:
    path: "/hosthome"
